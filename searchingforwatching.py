from aiogram import Bot, Dispatcher,executor,types
from token_auth import token
from script import get_user_info,get_user_subs,get_friends_user,get_user_photo
import json


def telegram_bot(token):
    bot  = Bot(token=token,parse_mode=types.ParseMode.HTML)
    dp = Dispatcher(bot=bot)

    #@dp.message_handler(content_types=["text"])
    async def echo(message: types.Message):
        await message.answer("[ üîß ] –ë–æ—Ç –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ –æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∂–∏–≤—ë—Ç ")
        await message.answer("üßë‚Äçüíª")
        print(f"[+] LOGGING: '{message.text}' –æ—Ç {message.from_user.full_name} ({message.from_user.id})")


    @dp.message_handler(commands=['start'])
    async def send_message(message: types.Message):
        await message.answer("<u>–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</u>: –¥–∞–Ω–Ω—ã–π –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –ø–æ—ç—Ç–æ–º—É —è –∂–¥—É –æ—Ç –í–∞—Å —Ñ–∏–¥–±—ç–∫ –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ –≤ –ª—Å @gifgufgaf")
        await message.answer("–í–∫—Ä–∞—Ç—Ü–µ –æ –±–æ—Ç–µ: –¥–∞–Ω–Ω—ã–π –±–æ—Ç –±–µ—Ä—ë—Ç –¥–∞–Ω–Ω—ã–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (VK, Instagram(–ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ)), –ø–æ—ç—Ç–æ–º—É –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Ü–µ–ª–∏ –±–æ—Ç–∞ –±—ã–ª–∏ –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏.")
        print(f"[+] LOGGING: '{message.text}' –æ—Ç {message.from_user.full_name} ({message.from_user.id})")

    @dp.message_handler(commands=['help'])
    async def send_message(message: types.Message):
        await message.answer("<b>–í–≤–æ–¥–∏ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (—á–∏—Å–ª–æ–≤–æ–π –∏–ª–∏ –±—É–∫–≤–µ–Ω–Ω—ã–π)</b> \n\n–ù–µ –Ω–∞–≥—Ä—É–∂–∞–π –±–æ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ —Å 500> —Ñ–æ—Ç–æ, –∞ —Ç–æ –µ–º—É —Å—Ç–∞–Ω–µ—Ç –ø–ª–æ—Ö–æü•π ")
        print(f"[+] LOGGING: '{message.text}' –æ—Ç {message.from_user.full_name} ({message.from_user.id})")

    @dp.message_handler(content_types=["text"])

    async def echo(message: types.Message):
        try:
            print(f"[+] LOGGING: '{message.text}' –æ—Ç {message.from_user.full_name} ({message.from_user.id})")
            user_id = message.text
            await message.answer(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –Ω–∞–π–¥–µ–Ω–Ω–∞—è –ø–æ –∞–π–¥–∏: {message.text}")
            get_user_info(user_id)
            with open("account_info.json", "r") as read_file:
                data = json.load(read_file)
                first_name = data["first_name"]
                second_name = data["second_name"]
                birth_date = data["birth_date"]
                interests = data["interests"]
                home_town = data["home_town"]
                city = data["city"]
                mobile_phone = data["mobile_phone"]
            read_file.close()
                
            await message.answer(f"–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏: \n \t üìã –ò–º—è –§–∞–º–∏–ª–∏—è: {first_name} {second_name} \n \t üéâ –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: {birth_date} \n \t üòç –ò–Ω—Ç–µ—Ä–µ—Å—ã: {interests} \n \t üè† –†–æ–¥–Ω–æ–π –≥–æ—Ä–æ–¥: {home_town} \n \t üèô –ì–æ—Ä–æ–¥: {city} \n \t üì± –ú–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: {mobile_phone} \n –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ñ–∞–π–ª–∞–º–∏ –Ω–∏–∂–µ.")
            await message.answer_document(open('account_info.json', 'rb'))
            get_user_subs(user_id)
            await message.answer_document(open('account_subs.json', 'rb'))
            get_friends_user(user_id)
            await message.answer_document(open('account_friends.json', 'rb'))
            await message.answer(f"–†–∞–∑–¥–µ–ª —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–µ")
            #get_user_photo(user_id)
            #await message.answer_document(open('account_photos.zip', 'rb'))
            #await message.answer_video(open('success.mp4','rb'))
        except:
            await message.answer("–ß—ë—Ç –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–æ —ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Ñ–∏–∫—Å–∏—Ç—Å—è, –Ω–∞–¥–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å, –ø—Ä–∞–≤–¥–∞ –≤–µ–¥—å? ")
            await message.answer("ü•∫")
            print(f"[!] WARNING: '{message.text}' –æ—Ç {message.from_user.full_name} ({message.from_user.id})")
    executor.start_polling(dispatcher = dp)
if __name__ == "__main__":
    telegram_bot(token)
